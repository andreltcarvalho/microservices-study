version: "3"

services:
  database:
    build: "./database-handler"
    depends_on:
      - mongodb
    environment:
      - SERVER_PORT=8080
      - SPRING_DATASOURCE_IP=mongodb
      - SPRING_DATASOURCE_PORT=27017
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=root
      - SPRING_DATASOURCE_DATABASE=user_db
    image: database
    ports:
      - "8080:8080"
    networks:
      - "microservices-network"
    restart: always
    links:
      - mongodb

  mongodb:
    image: mongo
    ports:
      - "27017:27017"
    networks:
      - "microservices-network"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=root
    restart: always
    volumes:
      - mongodb:/data/db

  api:
    build: "./microservices-user-api"
    depends_on:
      - database
    image: api
    environment:
      - DATABASE_HOST=database
      - DATABASE_PORT=8080
      - SERVER_PORT=8081
    ports:
      - "8081:8081"
    networks:
      - "microservices-network"
    restart: always
    links:
      - database
  
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    links:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

networks:
  microservices-network:
    external: true
    name: microservices-network

volumes:
  mongodb:
    driver: local
